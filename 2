#include <stdio.h>
#include <stdlib.h>

#define PASSWORD 2025
#define MAX_TRY   3

void clear_screen();
void wait_for_key();
void print_letter_triangle(char ch);
void print_multiplication_table(int n);

int main() {
    int password, attempt = 0;
    char choice;
    int running = 1;

    // 登入驗證
    while (attempt < MAX_TRY) {
        printf("請輸入4位數密碼: ");
        scanf("%d", &password);

        if (password == PASSWORD) {
            printf("密碼正確，歡迎使用!\n");
            break;
        } else {
            attempt++;
            if (attempt == MAX_TRY) {
                printf("錯誤三次，強制結束。\n");
                return 1;
            } else {
                printf("密碼錯誤，請重新輸入。\n");
            }
        }
    }

    while (running) {
        clear_screen();
        printf("======== 主選單 ========\n");
        printf("a. 直角三角形\n");
        printf("b. 乘法表\n");
        printf("c. 結束\n");
        printf("========================\n");
        printf("請選擇 (a/b/c): ");

        while ((choice = getchar()) == '\n');

        switch(choice) {
            case 'a':
            case 'A': {
                char ch;
                printf("請輸入一個字元 (a~n): ");
                while ((ch = getchar()) == '\n');

                if (ch >= 'a' && ch <= 'n') {
                    print_letter_triangle(ch);
                } else {
                    printf("輸入錯誤，必須是 a~n 之間的字元。\n");
                    wait_for_key();
                }
                break;
            }
            case 'b':
            case 'B': {
                int n;
                printf("請輸入乘法表大小 (1~9): ");
                if (scanf("%d", &n) == 1) {
                    if (n >= 1 && n <= 9) {
                        print_multiplication_table(n);
                    } else {
                        printf("輸入錯誤，必須是 1~9 之間的整數。\n");
                        wait_for_key();
                    }
                } else {
                    printf("輸入錯誤，請輸入數字。\n");
                    wait_for_key();
                    while (getchar() != '\n');
                }
                break;
            }
            case 'c':
            case 'C':
                running = 0;
                break;
            default:
                printf("選項錯誤，請重新選擇。\n");
                wait_for_key();
        }
    }

    printf("程式結束\n");
    return 0;
}

void print_letter_triangle(char ch) {
    int i, j;
    clear_screen();
    printf("直角三角形 (%c)\n\n", ch);

    for (i = ch; i >= 'a'; i--) {
        for (j = i; j <= ch; j++) {
            printf("%c", j);
        }
        printf("\n");
    }

    printf("\n按 Enter 鍵返回主選單...\n");
    wait_for_key();
}

void print_multiplication_table(int n) {
    int i, j;
    clear_screen();
    printf("%d x %d 乘法表\n\n", n, n);

    for (i = 1; i <= n; i++) {  // 修正：印完整乘法表
        for (j = 1; j <= n; j++) {
            printf("%4d", i * j);
        }
        printf("\n");
    }

    printf("\n按 Enter 鍵返回主選單...\n");
    wait_for_key();
}

void clear_screen() {
    int i;
    for (i = 0; i < 40; i++) {
        printf("\n");
    }
}

void wait_for_key() {
    int ch;
    while ((ch = getchar()) != '\n' && ch != EOF);
    getchar();
}
